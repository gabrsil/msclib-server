// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Album {
  id            String         @id @default(uuid())
  name          String
  artist        Artist         @relation(fields: [artistId], references: [id])
  artistId      String
  releaseDate   DateTime
  imgUrl        String?
  reproductions Reproduction[]
  createdAt     DateTime       @default(now())
}

model Genre {
  id        String     @id @default(uuid())
  name      String
  artists   Artist[]
  subGenres SubGenre[]
  createdAt DateTime   @default(now())
}

model SubGenre {
  id      String @id @default(uuid())
  genre   Genre  @relation(fields: [genreId], references: [id])
  genreId String
}

model Artist {
  id        String   @id @default(uuid())
  name      String
  debutDate String
  genre     Genre    @relation(fields: [genreId], references: [id])
  genreId   String
  albums    Album[]
  createdAt DateTime @default(now())
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  password      String
  bornDate      DateTime
  reproductions Reproduction[]
  userTargets   Friendship[]   @relation("Friendship_userTarget")
  userSource    Friendship?    @relation("Friendship_userSource")
  createdAt     DateTime       @default(now())
  currentToken  String?
}

model Reproduction {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  albumId   String
  album     Album    @relation(fields: [albumId], references: [id])
  createdAt DateTime @default(now())
}

enum FriendshipStatus {
  PENDING
  ACCEPTED
  DECLINED
}

model Friendship {
  id         String           @id @default(uuid())
  sourceUser User             @relation("Friendship_userSource", fields: [sourceId], references: [id])
  targetUser User             @relation("Friendship_userTarget", fields: [targetId], references: [id])
  status     FriendshipStatus @default(PENDING)
  sourceId   String           @unique
  targetId   String
}
